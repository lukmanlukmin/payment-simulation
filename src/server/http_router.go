// Package server ...
package server

import (
	"fmt"
	"payment-simulation/bootstrap"
	_ "payment-simulation/docs" // docs is generated by Swag CLI

	defaultHandler "payment-simulation/handler/http"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/swagger"
)

// HTTPRouter ...
// @title Payment API
// @version 1.0.0-Beta
// @description Payment API Documentation
// @schemes http https
func (h *HTTPApi) HTTPRouter(router *fiber.App, bs *bootstrap.Bootstrap) {
	defer debugAPIList(router)

	router.Get("/swagger/*", swagger.HandlerDefault) // Default /swagger/index.html

	handler := defaultHandler.NewHandler(bs)
	router.Post("/transfer", handler.Transfer)
}

func debugAPIList(router *fiber.App) {
	allowedMethods := map[string]bool{
		"GET":    true,
		"POST":   true,
		"PUT":    true,
		"DELETE": true,
		"PATCH":  true,
	}

	routes := router.GetRoutes()
	seen := make(map[string]bool) // supaya gak double print

	for _, route := range routes {
		if allowedMethods[route.Method] {
			// Cek supaya gak duplicate path-method
			key := route.Method + " " + route.Path
			if !seen[key] {
				seen[key] = true
				fmt.Printf("[%s] %s\n", route.Method, route.Path)
			}
		}
	}
}
